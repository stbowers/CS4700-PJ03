KW_CLASS, class
IDENT, Bat
SY_LBRACE, {
KW_VARDEC, field
KW_TYPE, int
IDENT, x
SY_COMMA, ,
IDENT, y
SY_SEMI, ;
KW_VARDEC, field
KW_TYPE, int
IDENT, width
SY_COMMA, ,
IDENT, height
SY_SEMI, ;
KW_VARDEC, field
KW_TYPE, int
IDENT, direction
SY_SEMI, ;
KW_SUBDEC, constructor
IDENT, Bat
IDENT, new
SY_LPAREN, (
KW_TYPE, int
IDENT, Ax
SY_COMMA, ,
KW_TYPE, int
IDENT, Ay
SY_COMMA, ,
KW_TYPE, int
IDENT, Awidth
SY_COMMA, ,
KW_TYPE, int
IDENT, Aheight
SY_RPAREN, )
SY_LBRACE, {
KW_LET, let
IDENT, x
SY_EQ, =
IDENT, Ax
SY_SEMI, ;
KW_LET, let
IDENT, y
SY_EQ, =
IDENT, Ay
SY_SEMI, ;
KW_LET, let
IDENT, width
SY_EQ, =
IDENT, Awidth
SY_SEMI, ;
KW_LET, let
IDENT, height
SY_EQ, =
IDENT, Aheight
SY_SEMI, ;
KW_LET, let
IDENT, direction
SY_EQ, =
INTEGER, 2
SY_SEMI, ;
KW_DO, do
IDENT, show
SY_LPAREN, (
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
KW_CONST, this
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, dispose
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_DO, do
IDENT, Memory
SY_PERIOD, .
IDENT, deAlloc
SY_LPAREN, (
KW_CONST, this
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, show
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, true
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, draw
SY_LPAREN, (
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, hide
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, false
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, draw
SY_LPAREN, (
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, draw
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, drawRectangle
SY_LPAREN, (
IDENT, x
SY_COMMA, ,
IDENT, y
SY_COMMA, ,
IDENT, x
SY_OP, +
IDENT, width
SY_COMMA, ,
IDENT, y
SY_OP, +
IDENT, height
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, setDirection
SY_LPAREN, (
KW_TYPE, int
IDENT, Adirection
SY_RPAREN, )
SY_LBRACE, {
KW_LET, let
IDENT, direction
SY_EQ, =
IDENT, Adirection
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_TYPE, int
IDENT, getLeft
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_RETURN, return
IDENT, x
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_TYPE, int
IDENT, getRight
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_RETURN, return
IDENT, x
SY_OP, +
IDENT, width
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, setWidth
SY_LPAREN, (
KW_TYPE, int
IDENT, Awidth
SY_RPAREN, )
SY_LBRACE, {
KW_DO, do
IDENT, hide
SY_LPAREN, (
SY_RPAREN, )
SY_SEMI, ;
KW_LET, let
IDENT, width
SY_EQ, =
IDENT, Awidth
SY_SEMI, ;
KW_DO, do
IDENT, show
SY_LPAREN, (
SY_RPAREN, )
SY_SEMI, ;
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
KW_SUBDEC, method
KW_VOID, void
IDENT, move
SY_LPAREN, (
SY_RPAREN, )
SY_LBRACE, {
KW_IF, if
SY_LPAREN, (
IDENT, direction
SY_EQ, =
INTEGER, 1
SY_RPAREN, )
SY_LBRACE, {
KW_LET, let
IDENT, x
SY_EQ, =
IDENT, x
SY_MINUS, -
INTEGER, 4
SY_SEMI, ;
KW_IF, if
SY_LPAREN, (
IDENT, x
SY_OP, <
INTEGER, 0
SY_RPAREN, )
SY_LBRACE, {
KW_LET, let
IDENT, x
SY_EQ, =
INTEGER, 0
SY_SEMI, ;
SY_RBRACE, }
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, false
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, drawRectangle
SY_LPAREN, (
SY_LPAREN, (
IDENT, x
SY_OP, +
IDENT, width
SY_RPAREN, )
SY_OP, +
INTEGER, 1
SY_COMMA, ,
IDENT, y
SY_COMMA, ,
SY_LPAREN, (
IDENT, x
SY_OP, +
IDENT, width
SY_RPAREN, )
SY_OP, +
INTEGER, 4
SY_COMMA, ,
IDENT, y
SY_OP, +
IDENT, height
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, true
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, drawRectangle
SY_LPAREN, (
IDENT, x
SY_COMMA, ,
IDENT, y
SY_COMMA, ,
IDENT, x
SY_OP, +
INTEGER, 3
SY_COMMA, ,
IDENT, y
SY_OP, +
IDENT, height
SY_RPAREN, )
SY_SEMI, ;
SY_RBRACE, }
KW_ELSE, else
SY_LBRACE, {
KW_LET, let
IDENT, x
SY_EQ, =
IDENT, x
SY_OP, +
INTEGER, 4
SY_SEMI, ;
KW_IF, if
SY_LPAREN, (
SY_LPAREN, (
IDENT, x
SY_OP, +
IDENT, width
SY_RPAREN, )
SY_OP, >
INTEGER, 511
SY_RPAREN, )
SY_LBRACE, {
KW_LET, let
IDENT, x
SY_EQ, =
INTEGER, 511
SY_MINUS, -
IDENT, width
SY_SEMI, ;
SY_RBRACE, }
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, false
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, drawRectangle
SY_LPAREN, (
IDENT, x
SY_MINUS, -
INTEGER, 4
SY_COMMA, ,
IDENT, y
SY_COMMA, ,
IDENT, x
SY_MINUS, -
INTEGER, 1
SY_COMMA, ,
IDENT, y
SY_OP, +
IDENT, height
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, setColor
SY_LPAREN, (
KW_CONST, true
SY_RPAREN, )
SY_SEMI, ;
KW_DO, do
IDENT, Screen
SY_PERIOD, .
IDENT, drawRectangle
SY_LPAREN, (
SY_LPAREN, (
IDENT, x
SY_OP, +
IDENT, width
SY_RPAREN, )
SY_MINUS, -
INTEGER, 3
SY_COMMA, ,
IDENT, y
SY_COMMA, ,
IDENT, x
SY_OP, +
IDENT, width
SY_COMMA, ,
IDENT, y
SY_OP, +
IDENT, height
SY_RPAREN, )
SY_SEMI, ;
SY_RBRACE, }
KW_RETURN, return
SY_SEMI, ;
SY_RBRACE, }
SY_RBRACE, }
